[metadata]
name = nickelpipeline   # used as pip install name, import name
description = Photometric Pipeline for the Nickel Telescope
long_description = file: README.md
long_description_content_type = text/markdown
author = Allison K. Eto
author_email = allisonketo@gmail.com
license = BSD-3
url = https://github.com/altair-above/nickelpipeline
edit_on_github = False
github_project = altair-above/nickelpipeline
keywords = photometry, astrometry, astronomy, Nickel, UCO, instrumentation, 
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.11
    # Topic :: Documentation :: Sphinx
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: User Interfaces

[options]
zip_safe = False
use_2to3 = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
include_package_data = True
install_requires =  #anythign imported
    numpy>=1.26
    astropy>=6.1
    photutils>=1.12
    extension-helpers>=0.1
    requests>=2.32
    scipy>=1.13
    matplotlib>=3.9
    scikit-learn>=1.5
    scikit-image>=0.24
    loess>=2.1
    # IPython>=7.26

[options.extras_require]    # Leave alone
test =
    pytest>=6.2
    pytest-astropy
    tox
    pytest-cov
    coverage
    codecov
docs =
    sphinx
    sphinx-automodapi
    sphinx_rtd_theme
dev =
    pytest>=6.2
    pytest-astropy
    tox
    pytest-cov
    coverage
    codecov
    sphinx
    sphinx-automodapi
    sphinx_rtd_theme

[options.package_data]
* = *.md, data/*, data/*/*

# [options.entry_points]
# console_scripts =
#     fiberlab_browse_images = fiberlab.scripts.browse_images:BrowseImages.entry_point
#     fiberlab_collimated_FRD = fiberlab.scripts.collimated_FRD:CollimatedFRD.entry_point
#     fiberlab_collimated_farfield = fiberlab.scripts.collimated_farfield:CollimatedFarField.entry_point
#     fiberlab_convert_to_fits = fiberlab.scripts.convert_to_fits:ConvertToFits.entry_point
#     fiberlab_farfield_inspector = fiberlab.scripts.farfield_inspector:FarFieldInspector.entry_point
#     fiberlab_fullcone_farfield = fiberlab.scripts.fullcone_farfield:FullConeFarField.entry_point
#     fiberlab_fullcone_ee_fratio = fiberlab.scripts.fullcone_ee_fratio:FullConeEEFRatio.entry_point
#     fiberlab_fullcone_throughput = fiberlab.scripts.fullcone_throughput:FullConeThroughput.entry_point
#     fiberlab_markcircles = fiberlab.scripts.markcircles:MarkCircles.entry_point

# [tool:pytest]
# testpaths = "fiberlab/tests"

[coverage:run]
omit =
    # fiberlab/tests/*
    fiberlab/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


